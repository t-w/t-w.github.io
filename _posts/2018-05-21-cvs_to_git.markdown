---
layout: post
title: "The simpliest way to convert/import legacy CVS repositories to GIT"
date: 2018-05-21
categories: version control cvs git
tags: cvs git conversion
---
Another task that should be relatively simple seems to be unnecessary
complicated everywhere - so a quick note here.

Assuming that you have the `CVSROOT` (the tree with CVS repositories
to convert) locally available (a network drive should be OK, as long
as you can access it directly using `cd`, `ls` etc.),
all you have to do for each cvs repo (module) is:
{% highlight bash %}
$ mkdir module_name ; cd module_name
$ git cvsimport -v -d :local:/home/repo/cvs module_name
{% endhighlight %}

And you have the cvs module in a new git repo, you can eg. add a remote
and push all there, eg. for github:
{% highlight bash %}
$ git remote add origin git@github.com:t-w/a_repo.git
$ git push -u origin --all
$ git push -u origin --tags
{% endhighlight %}


### A bit more complicated way...
... using cvs2git (cvs2svn) is described on [his page][3.]


(Possibly for more complicated cases these might not be as
straight-forward - but at the moment they work good enough for me).


Useful related links
--------------------
1. [Link 1][1.]
2. [Link 2][2.]
3. [Link 3][3.]
4. [Link 4][4.]
5. [Link 5][5.]
6. [Link 6][6.]

[1.]: http://gitolite.com/archived/cvs2git.html
[2.]: https://stackoverflow.com/questions/20869710/migrate-from-cvs-to-git-without-losing-history
[3.]: https://blog.derakkilgo.com/2013/12/11/steps-to-migrate-a-code-repository-from-cvs-to-git/
[4.]: https://gist.github.com/binarytemple/a707114df7067c1c81ab
[5.]: http://www.mcs.anl.gov/~jacob/cvs2svn/cvs2git.html
[6.]: http://web.mit.edu/svn/src/cvs2svn-1.4.0/www/cvs2svn.html

